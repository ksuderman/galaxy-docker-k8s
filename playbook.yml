---
# file: playbook.yml
# Shortcut to run install tasks on the localhost without setting up an inventory.
- hosts: localhost
  connection: local
  vars:
    required_conditional_packages: ['psycopg2-binary', 'pykube-ng', 'total-perspective-vortex', 'sentry_sdk']
  tasks:
  - name: Grep for required packages
    shell: "grep -w '{{ item }}' /galaxy/server/lib/galaxy/dependencies/conditional-requirements.txt"
    register: grep_output
    ignore_errors: true
    changed_when: false
    with_items: "{{ required_conditional_packages }}"
  - name: register conditional package versions, which will be used to render the k8s-requirements.txt.j2 template
    set_fact:
      conditional_package_requirements: "{{ dict(grep_output.results | map(attribute='item') | zip(grep_output.results | map(attribute='stdout_lines'))) }}"

- hosts: localhost
  connection: local
  vars:
    galaxy_config_style: yaml
    galaxy_layout: legacy-improved
    galaxy_server_dir: /galaxy/server
    galaxy_requirements_file: "{{ galaxy_server_dir }}/lib/galaxy/dependencies/k8s-requirements.txt"
    galaxy_virtualenv_command: /usr/bin/python3 -m virtualenv
    galaxy_virtualenv_python: python3
    pip_extra_args: "--no-cache-dir --compile"
    galaxy_manage_database: false
    galaxy_manage_clone: false
    galaxy_manage_existing: true
    galaxy_client_make_target: client-production
    galaxy_manage_gravity: false
    galaxy_systemd_mode: not
    galaxy_config_files:
      - src: files/welcome.html
        dest: "{{ galaxy_server_dir }}/static/welcome.html"
    galaxy_config_templates:
      - src: templates/k8s-requirements.txt.j2
        dest: "{{ galaxy_server_dir }}/lib/galaxy/dependencies/k8s-requirements.txt"

    galaxy_config:
      gravity:
        gunicorn:
          bind: 0.0.0.0:8080
      uwsgi: {}
  tasks:
  - name: Run the galaxy role
    include_role:
      name: galaxy
    tags: galaxy_build_client
